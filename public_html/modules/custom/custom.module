<?php

use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_theme_suggestions_alter().
 */
function custom_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
    if($hook == 'menu'){
        $menus = ['main-lv', 'main-ru'];
        if(in_array($variables['menu_name'], $menus)){
            $suggestions[] = $hook . '__heder_menu';
        }
    }
}

/**
 * Implements hook_preprocess_block().
 */
function custom_preprocess_block(&$variables) {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    if($variables['plugin_id'] == 'block_content:96d6099b-467d-4d74-80c6-067871537539'){
        $config = \Drupal::config('system.site');
        $variables['site_name'] = $config->get('name');
        $variables['site_slogan'] = $config->get('slogan');
    }
    if($variables['plugin_id'] == 'views_block:about_block-block_1'){
        foreach ($variables['content']['#view']->result as $row) {
            $node = $row->_entity;
            if ($node->hasTranslation($language)){
                $node = $node->getTranslation($language);
            }
            $media = $node->field_attels->entity;
            if(isset($media)){
                $image = getMediaImage($media, 'wide');
            }else{
                $image = 'default';
            }
            $variables['title'] = $node->label() ?? '';
            $variables['body'] = $node->field_front_page_about_body->value ?? '';
            $variables['image'] = $image;
            $variables['url'] = $node->toUrl()->toString();
        }
    }

}

/**
 * Get image style url from passed media and style
 * 
 * @param object $media
 * @param string $image_style
 * @return string
 */
function getMediaImage($media, $image_style){
    $file = $media->field_media_image->entity;
    if($file->getMimeType() == 'image/gif'){
        return $file->createFileUrl(false);
    }
    $uri = $file->getFileUri();
    return ImageStyle::load($image_style)->buildUrl($uri);
}

/**
 * Implements template_peprocess_node()
 */
function custom_preprocess_node(&$variables){
    $node = $variables['node'];
    if ($node->getType() == 'par_mums') {
        $media = $node->field_open_page_image->entity;
        if(isset($media)){
            $image = getMediaImage($node->field_open_page_image->entity, 'fullhd');
        }else{
            $image = 'default';
        }
        $variables['title'] = $node->label() ?? '';
        $variables['body'] = $node->body->value ?? '';
        $variables['image'] = $image;
        $variables['url'] = $node->toUrl()->toString();
    }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter()
 */
function custom_theme_suggestions_page_alter(array &$suggestions, array $variables){
    if ($node = \Drupal::routeMatch()->getParameter('node')){
        $suggestions[] = 'page__node__'. $node->bundle();
    }
}

/**
 * Implements template_preprocess_field()
 */
function custom_preprocess_field(&$variables){
    if (in_array($variables['field_type'], ['text_with_summary', 'text_long', 'string_long'])){
        $variables['attributes']['class'][] = 'cke_editable';
    }
}